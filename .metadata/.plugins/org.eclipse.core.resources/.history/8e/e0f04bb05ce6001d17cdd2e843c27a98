package mvcController;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.ejb.EJB;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import entities.Restaurant;
import mvcModels.RestaurantService;




/**
 * Servlet implementation class Servlet
 */
@WebServlet("/Servlet")
public class Servlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
     @EJB
     private  RestaurantService restaurantService;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
	
	
    public Servlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String action = request.getParameter("action");
		RequestDispatcher rd ;

		if(action.contentEquals("addRestaurant")) {
		    String name = request.getParameter("name");
		    String phone = request.getParameter("phone");
		    String address = request.getParameter("address");
		    String imageUrl = request.getParameter("imageUrl");
		    String specialty = request.getParameter("specialty");

		    // Check if any required fields are null or empty
		    if(name == null || name.trim().isEmpty() ||
		       phone == null || phone.trim().isEmpty() ||
		       address == null || address.trim().isEmpty() ||
		       imageUrl == null || imageUrl.trim().isEmpty() ||
		       specialty == null || specialty.trim().isEmpty()) {
		        // Handle the error, for example:
		        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "All fields are required");
		        return;
		    }

		    // Create a new Restaurant object
		    Restaurant restaurant = new Restaurant();
		    restaurant.setName(name);
		    restaurant.setPhone(phone);
		    restaurant.setAddress(address);
		    restaurant.setImageUrl(imageUrl);
		    restaurant.setSpecialty(specialty);

		    // Add the restaurant using RestaurantService EJB
		    restaurantService.addRestaurant(restaurant);

		    // Redirect to a confirmation page
		    response.sendRedirect("listRestaurant.jsp");
		}

	
		if(action.contentEquals("listRestaurant"))
		{
			List<Restaurant> restaurants = new ArrayList<Restaurant>();
			restaurants = restaurantService.getAllRestaurants();
			request.setAttribute("restaurants", restaurants);
			rd = request.getRequestDispatcher("listRestaurant.jsp");
			rd.forward(request, response);
			
			
		}
		if(action.contentEquals("deleteRestaurant"))
		{
			String Ridd = request.getParameter("Ridd");
			if(Ridd!=null)
			{int rid = Integer.parseInt(Ridd);
			List<Restaurant> restaurants = new ArrayList<Restaurant>();
			restaurants = restaurantService.deleteRestaurant(rid);
			request.setAttribute("restaurants", restaurants);
			rd = request.getRequestDispatcher("listRestaurant.jsp");
			rd.forward(request, response);
			}
		}
			
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
